<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="16" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="RegressionSuite" duration-ms="132" started-at="2019-01-31T17:47:08Z" finished-at="2019-01-31T17:47:08Z">
    <groups>
      <group name="abc">
        <method signature="RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="enterFirstNameAndLastNameTest" class="tests.RegistrationTests"/>
        <method signature="RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="enterFirstNameAndLastNameTest" class="tests.RegistrationTests"/>
        <method signature="RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="enterFirstNameAndLastNameTest" class="tests.RegistrationTests"/>
        <method signature="RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@27efef64]" name="enterFirstNameAndLastNameTest" class="tests.RegistrationTests"/>
      </group> <!-- abc -->
    </groups>
    <test name="RegistrationPageRegressionTests2" duration-ms="116" started-at="2019-01-31T17:47:08Z" finished-at="2019-01-31T17:47:08Z">
      <class name="tests.RegistrationTests">
        <test-method status="PASS" signature="beforeTest(org.testng.xml.XmlTest)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="beforeTest" is-config="true" duration-ms="8" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Test: "RegistrationPageRegressionTests2" verbose:1[parameters:][metagroups:] [included: ][excluded: ]  classes: packages:] ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.enterFirstNameAndLastNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="enterFirstNameAndLastNameTest" duration-ms="24" started-at="2019-01-31T23:17:08Z" description="This test case is to verify that the firstname and lastname is entered." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterFirstNameAndLastNameTest -->
        <test-method status="PASS" signature="selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="selectMaritalStatusTest" duration-ms="12" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the radio button single is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMaritalStatusTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectMaritalStatusTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterFirstNameAndLastNameTest status=SUCCESS method=RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectAHobbyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMaritalStatusTest status=SUCCESS method=RegistrationTests.selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="selectAHobbyTest" duration-ms="12" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the reading check box is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAHobbyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAHobbyTest status=SUCCESS method=RegistrationTests.selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectCountryTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="selectCountryTest" duration-ms="0" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the country is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountryTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@59fa1d9b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountryTest status=SUCCESS method=RegistrationTests.selectCountryTest()[pri:0, instance:tests.RegistrationTests@59fa1d9b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.RegistrationTests -->
    </test> <!-- RegistrationPageRegressionTests2 -->
    <test name="RegistrationPageRegressionTests4" duration-ms="104" started-at="2019-01-31T17:47:08Z" finished-at="2019-01-31T17:47:08Z">
      <class name="tests.RegistrationTests">
        <test-method status="PASS" signature="initialSetUp(org.testng.ITestContext)[pri:0, instance:tests.RegistrationTests@27efef64]" name="initialSetUp" is-config="true" duration-ms="296" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@1a482e36]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialSetUp -->
        <test-method status="PASS" signature="beforeTest(org.testng.xml.XmlTest)[pri:0, instance:tests.RegistrationTests@27efef64]" name="beforeTest" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Test: "RegistrationPageRegressionTests4" verbose:1[parameters:][metagroups:] [included: ][excluded: ]  classes: packages:] ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@27efef64]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.enterFirstNameAndLastNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@27efef64]" name="enterFirstNameAndLastNameTest" duration-ms="24" started-at="2019-01-31T23:17:08Z" description="This test case is to verify that the firstname and lastname is entered." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterFirstNameAndLastNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@27efef64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterFirstNameAndLastNameTest status=SUCCESS method=RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@27efef64] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@27efef64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectMaritalStatusTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@27efef64]" name="selectMaritalStatusTest" duration-ms="8" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the radio button single is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMaritalStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@27efef64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMaritalStatusTest status=SUCCESS method=RegistrationTests.selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@27efef64] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@27efef64]" name="selectAHobbyTest" duration-ms="12" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the reading check box is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAHobbyTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@27efef64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectAHobbyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@27efef64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAHobbyTest status=SUCCESS method=RegistrationTests.selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@27efef64] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectCountryTest()[pri:0, instance:tests.RegistrationTests@27efef64]" name="selectCountryTest" duration-ms="0" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the country is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountryTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@27efef64]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@27efef64]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountryTest status=SUCCESS method=RegistrationTests.selectCountryTest()[pri:0, instance:tests.RegistrationTests@27efef64] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="quitBrowser()[pri:0, instance:tests.RegistrationTests@27efef64]" name="quitBrowser" is-config="true" duration-ms="587" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quitBrowser -->
      </class> <!-- tests.RegistrationTests -->
    </test> <!-- RegistrationPageRegressionTests4 -->
    <test name="RegistrationPageRegressionTests3" duration-ms="120" started-at="2019-01-31T17:47:08Z" finished-at="2019-01-31T17:47:08Z">
      <class name="tests.RegistrationTests">
        <test-method status="PASS" signature="beforeTest(org.testng.xml.XmlTest)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="beforeTest" is-config="true" duration-ms="12" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Test: "RegistrationPageRegressionTests3" verbose:1[parameters:][metagroups:] [included: ][excluded: ]  classes: packages:] ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.enterFirstNameAndLastNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="enterFirstNameAndLastNameTest" duration-ms="24" started-at="2019-01-31T23:17:08Z" description="This test case is to verify that the firstname and lastname is entered." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterFirstNameAndLastNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterFirstNameAndLastNameTest status=SUCCESS method=RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectMaritalStatusTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="selectMaritalStatusTest" duration-ms="8" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the radio button single is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMaritalStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMaritalStatusTest status=SUCCESS method=RegistrationTests.selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectAHobbyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="selectAHobbyTest" duration-ms="8" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the reading check box is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAHobbyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAHobbyTest status=SUCCESS method=RegistrationTests.selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectCountryTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="selectCountryTest" duration-ms="4" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the country is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountryTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@3ffc5af1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountryTest status=SUCCESS method=RegistrationTests.selectCountryTest()[pri:0, instance:tests.RegistrationTests@3ffc5af1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.RegistrationTests -->
    </test> <!-- RegistrationPageRegressionTests3 -->
    <test name="RegistrationPageRegressionTests" duration-ms="132" started-at="2019-01-31T17:47:08Z" finished-at="2019-01-31T17:47:08Z">
      <class name="tests.RegistrationTests">
        <test-method status="PASS" signature="beforeTest(org.testng.xml.XmlTest)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="beforeTest" is-config="true" duration-ms="8" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Test: "RegistrationPageRegressionTests" verbose:1[parameters:][metagroups:] [included: ][excluded: ]  classes: packages:] ]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.enterFirstNameAndLastNameTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="enterFirstNameAndLastNameTest" duration-ms="32" started-at="2019-01-31T23:17:08Z" description="This test case is to verify that the firstname and lastname is entered." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enterFirstNameAndLastNameTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="afterMethod" is-config="true" duration-ms="12" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=enterFirstNameAndLastNameTest status=SUCCESS method=RegistrationTests.enterFirstNameAndLastNameTest()[pri:0, instance:tests.RegistrationTests@2a5ca609] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectMaritalStatusTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="selectMaritalStatusTest" duration-ms="4" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the radio button single is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectMaritalStatusTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="afterMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectMaritalStatusTest status=SUCCESS method=RegistrationTests.selectMaritalStatusTest()[pri:0, instance:tests.RegistrationTests@2a5ca609] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectAHobbyTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="selectAHobbyTest" duration-ms="12" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the reading check box is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectAHobbyTest -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="afterMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectAHobbyTest status=SUCCESS method=RegistrationTests.selectAHobbyTest()[pri:0, instance:tests.RegistrationTests@2a5ca609] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectCountryTest()[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="selectCountryTest" duration-ms="4" started-at="2019-01-31T23:17:08Z" description="This test case verifies whether the country is selected." finished-at="2019-01-31T23:17:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectCountryTest -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void tests.RegistrationTests.selectCountryTest()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:tests.RegistrationTests@2a5ca609]" name="afterMethod" is-config="true" duration-ms="4" started-at="2019-01-31T23:17:08Z" finished-at="2019-01-31T23:17:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectCountryTest status=SUCCESS method=RegistrationTests.selectCountryTest()[pri:0, instance:tests.RegistrationTests@2a5ca609] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- tests.RegistrationTests -->
    </test> <!-- RegistrationPageRegressionTests -->
  </suite> <!-- RegressionSuite -->
</testng-results>
